#!/bin/bash

# Git AI Commit Message Generator
# Usage: ./gitai or gitai (if in PATH)
# Example: gitai && git ai

# Capture the original working directory
ORIGINAL_DIR="$(pwd)"

# Resolve the actual script location, following symlinks
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do
    DIR="$(cd -P "$(dirname "$SOURCE")" && pwd)"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
done
SCRIPT_DIR="$(cd -P "$(dirname "$SOURCE")" && pwd)"

# Change to the script directory for uv to work correctly
cd "$SCRIPT_DIR"

# Pass the original directory to the Python script
COMMIT_MSG=$(GITAI_ORIGINAL_DIR="$ORIGINAL_DIR" uv run python git_agent.py)

# Store in environment variable and a temp file for persistence across shells
echo "$COMMIT_MSG" > /tmp/gitai_last_commit

# Also output to stdout for backward compatibility
echo "$COMMIT_MSG"